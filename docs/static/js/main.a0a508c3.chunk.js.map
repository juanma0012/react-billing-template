{"version":3,"sources":["components/InvoiceRevision.js","components/InvoiceCanvas.js","components/InvoiceOverview.js","App.js","serviceWorker.js","index.js"],"names":["InvoiceRevision","_ref","invoice","react_default","a","createElement","className","data-placement","data-toggle","title","number","Date","date","toLocaleDateString","dueDate","terms","billTo","Intl","NumberFormat","format","balance","InvoiceCanvas","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","state","showSection","section","setState","content","_this2","src","concat","process","role","type","onClick","React","Component","InvoiceOverview","status","method","capacity","drayage","incoterms","serviceOptions","map","item","index","key","length","hazardousCommodities","App","fetch","then","res","json","result","console","log","error","components_InvoiceRevision","components_InvoiceCanvas","components_InvoiceOverview","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0a508c3.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './components.scss';\r\n\r\nconst InvoiceRevision = ({ invoice }) => (\r\n    <div className=\" InvoiceRevision d-flex flex-column\">\r\n        <div className=\"flex-row\">\r\n            <h1 className=\"d-inline-block\">\r\n                Invoice\r\n            </h1>\r\n            <p className=\"ml-3 d-inline-block invoice-number\">\r\n                <span data-placement=\"top\" data-toggle=\"tooltip\" title=\"Invoice Number\">\r\n                    {invoice.number}\r\n                </span>\r\n            </p>\r\n        </div>\r\n        <div className=\"revision-section\">\r\n            <div className=\"font-weight-bold title-section\">\r\n                INVOICE - REVISION\r\n            </div>\r\n            <div className=\"d-flex flex-row\">\r\n                <div className=\"left-section col-sm container\">\r\n                    <div className=\"d-flex flex-row mb-2\">\r\n                        <div className=\"col-sm\">\r\n                            Invoice #\r\n                        </div>\r\n                        <div className=\"col-sm text-right font-weight-bold\" >\r\n                            {invoice.number}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-row mb-1\">\r\n                        <div className=\"col-sm\">\r\n                            Date\r\n                        </div>\r\n                        <div className=\"col-sm text-right font-weight-bold\">\r\n                            {(new Date(invoice.date * 1000).toLocaleDateString())}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-row mb-1\">\r\n                        <div className=\"col-sm\">\r\n                            Due Date\r\n                        </div>\r\n                        <div className=\"col-sm text-right font-weight-bold\">\r\n                            {(new Date(invoice.dueDate * 1000).toLocaleDateString())}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-row mb-2\">\r\n                        <div className=\"col-sm\">\r\n                            Terms\r\n                        </div>\r\n                        <div className=\"col-sm text-right font-weight-bold\">\r\n                            {invoice.terms}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mid-section col-sm\">\r\n                    <div className=\"font-weight-bold\">\r\n                        Bill To\r\n                    </div>\r\n                    <div className=\"font-weight-bold bill-to\">\r\n                        {invoice.billTo}\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-section col-sm\">\r\n                    <div className=\"font-weight-bold\">\r\n                        New Balance upon Re-booking\r\n                    </div>\r\n                    <div className=\"font-weight-bold balance\">\r\n                        $ {(new Intl.NumberFormat('us-US').format(invoice.balance))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nInvoiceRevision.propTypes = {\r\n    invoice: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default InvoiceRevision\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './components.scss';\r\n\r\nclass InvoiceCanvas extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = { showSection: \"Diagram\" };\r\n    }\r\n    handleChange(section) {\r\n        this.setState({ showSection: section });\r\n    }\r\n    render() {\r\n        const section = this.state.showSection;\r\n        let content;\r\n\r\n        if (section === \"Diagram\") {\r\n            content =\r\n                <div className=\"content justify-content-center d-flex\">\r\n                    <img src={`${process.env.PUBLIC_URL}/images/diagram.png`}/>\r\n                </div>;\r\n        } else {\r\n            content =\r\n                <div className=\"content justify-content-center d-flex\">\r\n                    <img src={`${process.env.PUBLIC_URL}/images/map.png`}/>\r\n                </div>;\r\n        }\r\n        return (\r\n            <div className=\" InvoiceCanvas d-flex flex-column\">\r\n                <div className=\"d-flex flex-row head-section position-relative justify-content-center content\">\r\n                    <div className=\"position-absolute title-position\">\r\n                        <h2 >\r\n                            {this.state.showSection}\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"btn-group position-absolute canvas-menu fixed-top\" role=\"group\">\r\n                        <button type=\"button\" className=\"btn btn-outline-dark\" onClick={() => this.handleChange(\"Diagram\")}>Diagram</button>\r\n                        <button type=\"button\" className=\"btn btn-outline-dark\" onClick={() => this.handleChange(\"Map\")}>Map</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"canvas-section\">\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInvoiceCanvas.propTypes = {\r\n    invoice: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default InvoiceCanvas\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './components.scss';\r\n\r\nconst InvoiceOverview = ({ invoice }) => (\r\n    <div className=\" InvoiceOverview d-flex flex-column\">\r\n        <div className=\"overview-section\">\r\n            <div className=\"font-weight-bold title-section\">\r\n                OVERVIEW\r\n            </div>\r\n            <div className=\"d-flex flex-row\">\r\n                <div className=\"left-section col-sm container\">\r\n                    <div className=\"d-flex flex-row mb-2\">\r\n                        <div className=\"col-sm\">\r\n                            Status\r\n                        </div>\r\n                        <div className=\"col-sm text-right font-weight-bold\" >\r\n                            {invoice.status === \"active\" &&\r\n                                <span className=\"active-style\">\r\n                                <i className=\"fa mr-2 fa-check\"></i>Active\r\n                                </span>\r\n                            }\r\n                            {invoice.status !== \"active\" &&\r\n                                <span>\r\n                                    {invoice.status}\r\n                                </span>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-row mb-1\">\r\n                        <div className=\"col-sm\">\r\n                            Method\r\n                        </div>\r\n                        <div className=\"col-sm text-right font-weight-bold\">\r\n                            {invoice.method}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-row mb-1\">\r\n                        <div className=\"col-sm\">\r\n                            Capacity\r\n                        </div>\r\n                        <div className=\"col-sm text-right font-weight-bold\">\r\n                            {invoice.capacity}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-row mb-2\">\r\n                        <div className=\"col-sm\">\r\n                            Drayage\r\n                        </div>\r\n                        <div className=\"col-sm text-right font-weight-bold\">\r\n                            {invoice.drayage}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"left-section col-sm container\">\r\n                    <div className=\"d-flex flex-row mb-2\">\r\n                        <div className=\"col-sm\">\r\n                            Incoterms\r\n                        </div>\r\n                        <div className=\"col-sm text-right font-weight-bold\" >\r\n                            {invoice.incoterms}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-row mb-1\">\r\n                        <div className=\"col-sm\">\r\n                            Service Options\r\n                        </div>\r\n                        <div className=\"col-sm text-right font-weight-bold\">\r\n                            {invoice.serviceOptions.map((item, index) =>\r\n                                <span key={index}>{item}\r\n                                    {invoice.serviceOptions.length - 1 !== index &&\r\n                                        \", \"\r\n                                    }\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-row mb-1\">\r\n                        <div className=\"col-sm\">\r\n                            Hazardous or forbidden commodities\r\n                        </div>\r\n                        <div className=\"col-sm text-right font-weight-bold\">\r\n                            {invoice.hazardousCommodities.map((item, index) =>\r\n                                <span key={index}>{item}\r\n                                    {invoice.hazardousCommodities.length - 1 !== index &&\r\n                                        \", \"\r\n                                    }\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nInvoiceOverview.propTypes = {\r\n    invoice: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default InvoiceOverview\r\n","import React, { Component } from 'react';\nimport InvoiceRevision from './components/InvoiceRevision'\nimport InvoiceCanvas from './components/InvoiceCanvas'\nimport InvoiceOverview from './components/InvoiceOverview'\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { invoice: {hazardousCommodities:[], serviceOptions:[]} };\n  }\n  componentDidMount() {\n    /**\n     * Here should be the API call to get the Invoice data.\n     */\n    fetch(`${process.env.PUBLIC_URL}/mock/data.json`)\n      .then(res => res.json())\n      .then(\n      (result) => {\n        this.setState({\n          invoice: result\n        });\n        console.log(result);\n      },\n      (error) => {\n        this.setState({\n          error\n        });\n      }\n      )\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <InvoiceRevision invoice={this.state.invoice}/>\n        <InvoiceCanvas invoice={this.state.invoice}/>\n        <InvoiceOverview invoice={this.state.invoice}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}